version: 2
jobs:
  build:
    machine: 
      docker_layer_caching: false
    steps: 
      - checkout
  # publish jobs require $DOCKERHUB_REPO, $DOCKERHUB_USER, $DOCKERHUB_PASS defined
  publish_docker_linuxamd64:
    machine:
      docker_layer_caching: false
    steps:
      - checkout  
      - run:
          command: |
            LATEST_TAG=${CIRCLE_TAG:1} #trim v from tag
            if [ -z "$LATEST_TAG" ]
            then
                  LATEST_TAG="latest"
            fi
            #
            sudo docker build --pull -t $DOCKERHUB_REPO:$LATEST_TAG-amd64 -f amd64.Dockerfile .
            echo "SHAHANA"
            echo $DOCKERHUB_PASS
            echo $DOCKERHUB_PASS | sudo docker login -u $DOCKERHUB_USER --password-stdin
            sudo docker push $DOCKERHUB_REPO:$LATEST_TAG-amd64

  publish_docker_linuxarm32:
    machine:
      docker_layer_caching: false
    steps:
      - checkout  
      - run:
          command: |
            sudo docker run --rm --privileged multiarch/qemu-user-static:register --reset
            LATEST_TAG=${CIRCLE_TAG:1} #trim v from tag
            if [ -z "$LATEST_TAG" ]
            then
                  LATEST_TAG="latest"
            fi
            #
            sudo docker build --pull -t $DOCKERHUB_REPO:$LATEST_TAG-arm32v7 -f arm32v7.Dockerfile .
            echo $DOCKERHUB_PASS | sudo docker login -u $DOCKERHUB_USER --password-stdin
            sudo docker push $DOCKERHUB_REPO:$LATEST_TAG-arm32v7
  publish_docker_linuxarm64:
    machine:
      docker_layer_caching: false
    steps:
      - checkout
      - run:
          command: |
            sudo docker run --rm --privileged multiarch/qemu-user-static:register --reset
            LATEST_TAG=${CIRCLE_TAG:1} #trim v from tag
            if [ -z "$LATEST_TAG" ]
            then
                  LATEST_TAG="latest"
            fi
            #
            sudo docker build --pull -t $DOCKERHUB_REPO:$LATEST_TAG-arm64v8 -f arm64v8.Dockerfile .
            echo $DOCKERHUB_PASS | sudo docker login -u $DOCKERHUB_USER --password-stdin
            sudo docker push $DOCKERHUB_REPO:$LATEST_TAG-arm64v8
  publish_docker_multiarch:
    machine:
      enabled: true
      image: ubuntu-2004:2022.07.1
    steps:
      - run:
          command: |
            # Turn on Experimental features
            sudo mkdir ./.docker
            sudo sh -c 'echo "{ \"experimental\": \"enabled\" }" >> ./.docker/config.json'
            #
            echo $DOCKERHUB_PASS | sudo docker login -u $DOCKERHUB_USER --password-stdin
            #
            LATEST_TAG=${CIRCLE_TAG:1} #trim v from tag
            if [ -z "$LATEST_TAG" ]
            then
                  LATEST_TAG="latest"
            fi
            sudo docker manifest create --amend $DOCKERHUB_REPO:$LATEST_TAG $DOCKERHUB_REPO:$LATEST_TAG-amd64 $DOCKERHUB_REPO:$LATEST_TAG-arm32v7 $DOCKERHUB_REPO:$LATEST_TAG-arm64v8
            sudo docker manifest annotate $DOCKERHUB_REPO:$LATEST_TAG $DOCKERHUB_REPO:$LATEST_TAG-amd64 --os linux --arch amd64
            sudo docker manifest annotate $DOCKERHUB_REPO:$LATEST_TAG $DOCKERHUB_REPO:$LATEST_TAG-arm32v7 --os linux --arch arm --variant v7
            sudo docker manifest annotate $DOCKERHUB_REPO:$LATEST_TAG $DOCKERHUB_REPO:$LATEST_TAG-arm64v8 --os linux --arch arm64 --variant v8
            sudo docker manifest push $DOCKERHUB_REPO:$LATEST_TAG -p
workflows:
  version: 2

  publish:
    jobs:
      - publish_docker_linuxamd64:
          filters:
            # ignore any commit on any branch by default
            branches:
              only: master
            # only act on version tags
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - publish_docker_linuxarm32:
          filters:
            branches:
              only: master
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - publish_docker_linuxarm64:
          filters:
            branches:
              only: master
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - publish_docker_multiarch:
          requires:
            - publish_docker_linuxamd64
            - publish_docker_linuxarm32
            - publish_docker_linuxarm64
          filters:
            branches:
              only: master
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
